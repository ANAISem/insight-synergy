"""
Direkte Implementierung der Experten-Profile-Endpunkte f√ºr Insight Synergy.

Diese Datei enth√§lt einfache Implementierungen, die statische Daten zur√ºckgeben,
um die Frontend-Anwendung zu unterst√ºtzen.
"""

from fastapi import APIRouter, Query
from typing import List, Dict, Any, Optional
import random

# Router f√ºr Experten-Profile-Endpunkte
profiles_router = APIRouter()

# Vordefinierte Expertenprofile
EXPERT_PROFILES = [
    {
        "id": "exp-001",
        "name": "Dr. Tech Visionary",
        "domain": "Technologie",
        "specialty": "KI-Entwicklung & Zukunftstechnologien",
        "background": "F√ºhrender Forscher im Bereich k√ºnstliche Intelligenz mit Schwerpunkt auf ethischen Implikationen.",
        "perspective": "Techno-optimistisch, aber mit kritischem Blick auf gesellschaftliche Auswirkungen",
        "avatar": "üß†",
        "color": "#6366f1",
        "expertise": 95,
        "validatedCredentials": True
    },
    {
        "id": "exp-002",
        "name": "Prof. EcoThinker",
        "domain": "Umweltwissenschaften",
        "specialty": "Klimawandel & Nachhaltige Entwicklung",
        "background": "Langj√§hrige Forschung zu Umweltauswirkungen verschiedener Technologien und Wirtschaftsmodelle.",
        "perspective": "Fokus auf langfristige √∂kologische Nachhaltigkeit und Systemwandel",
        "avatar": "üåç",
        "color": "#22c55e",
        "expertise": 92,
        "validatedCredentials": True
    },
    {
        "id": "exp-003",
        "name": "FinExpert",
        "domain": "Wirtschaft",
        "specialty": "Finanzmarkt & Investitionsanalyse",
        "background": "Jahrzehnte an Erfahrung in der Analyse globaler M√§rkte und wirtschaftlicher Trends.",
        "perspective": "Pragmatisch, datengetrieben mit Fokus auf wirtschaftlichen Mehrwert",
        "avatar": "üìä",
        "color": "#eab308",
        "expertise": 88,
        "validatedCredentials": True
    },
    {
        "id": "exp-004",
        "name": "Ethics Specialist",
        "domain": "Philosophie & Ethik",
        "specialty": "Angewandte Ethik & soziale Gerechtigkeit",
        "background": "Forschung zu ethischen Fragen neuer Technologien und deren gesellschaftlichen Implikationen.",
        "perspective": "Stellt kritische Fragen zu Fairness, Zug√§nglichkeit und langfristigen Konsequenzen",
        "avatar": "‚öñÔ∏è",
        "color": "#8b5cf6",
        "expertise": 90,
        "validatedCredentials": True
    },
    {
        "id": "exp-005",
        "name": "Policy Advisor",
        "domain": "Politik & Regulierung",
        "specialty": "Internationale Richtlinien & Gesetzgebung",
        "background": "Beratung f√ºr Regierungen und internationale Organisationen zu Regulierungsfragen.",
        "perspective": "Fokus auf praktische Umsetzbarkeit und regulatorische Herausforderungen",
        "avatar": "üìù",
        "color": "#0ea5e9",
        "expertise": 87,
        "validatedCredentials": True
    },
    {
        "id": "exp-006",
        "name": "Dr. Medicine Insights",
        "domain": "Medizin",
        "specialty": "Medizinische Ethik & Gesundheitssystemforschung",
        "background": "Forschung und Praxis an der Schnittstelle zwischen medizinischer Innovation und ethischen Fragen.",
        "perspective": "Patientenzentrierter Ansatz mit Fokus auf gerechten Zugang zu Gesundheitsversorgung",
        "avatar": "üè•",
        "color": "#ec4899",
        "expertise": 93,
        "validatedCredentials": True
    },
    {
        "id": "exp-007",
        "name": "Tech Ethicist",
        "domain": "Technologieethik",
        "specialty": "KI-Ethik & Verantwortungsvolle Innovation",
        "background": "Forschung zur ethischen Entwicklung und Anwendung von KI in verschiedenen Bereichen.",
        "perspective": "Fokus auf menschenzentrierte Technologieentwicklung und ethische Leitplanken",
        "avatar": "ü§ñ",
        "color": "#3b82f6",
        "expertise": 96,
        "validatedCredentials": True
    }
]

@profiles_router.get("/profiles")
async def get_expert_profiles():
    """Gibt eine Liste vordefinierter Expertenprofile zur√ºck."""
    return {
        "experts": EXPERT_PROFILES,
        "count": len(EXPERT_PROFILES)
    }

@profiles_router.get("/suggested")
async def get_suggested_experts(
    topic: str = Query(..., description="Das Thema, f√ºr das Experten vorgeschlagen werden sollen"),
    count: int = Query(3, description="Anzahl der gew√ºnschten Experten")
):
    """Schl√§gt geeignete Experten f√ºr ein bestimmtes Thema vor."""
    # F√ºr diese Implementierung w√§hlen wir einfach zuf√§llig `count` Experten aus
    suggested_experts = random.sample(EXPERT_PROFILES, min(count, len(EXPERT_PROFILES)))
    
    return {
        "topic": topic,
        "experts": suggested_experts,
        "count": len(suggested_experts)
    } 